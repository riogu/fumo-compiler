fn identity[T](x: T) -> T {
    return x;
}

fn swap[T](a: T*, b: T*) -> void {
    let temp: T = *a;
    *a = *b;
    *b = temp;
}

fn max[T](a: T, b: T) -> T {
    if a < b {
        return a;
    }
    return b;
}

fn main() -> i32 {
    let x: i32 = identity[i32](42);
    let y: f64 = identity[f64](3.14);
    
    let a: i32 = 10;
    let b: i32 = 20;
    swap[i32](&a, &b);
    
    let bigger = max[i32](a, b);
    let bigger_float = max[f64](1.5, 2.7);
    
    return 0;
}

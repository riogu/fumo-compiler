struct Point[T] {
    let x: T;
    let y: T;
    
    fn static make(x_val: T, y_val: T) -> Point[T] {
        return Point[T]{x_val, y_val};
    }
}

fn distance_squared[T](p1: Point[T], p2: Point[T]) -> T {
    let dx: T = p1.x - p2.x;
    let dy: T = p1.y - p2.y;
    return dx * dx + dy * dy;
}

fn create_point[T](value: T) -> Point[T] {
    return Point[T]::make(value, value);
}

fn main() -> i32 {
    let p1 = Point[i32]::make(10, 20);
    let p2 = Point[i32]::make(5, 15);
    let dist = distance_squared[i32](p1, p2);
    
    let origin = create_point[f64](0.0);
    
    return 0;
}

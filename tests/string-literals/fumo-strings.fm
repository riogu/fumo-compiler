// linking with libc
fn printf(format: char*, ...) -> i32;

namespace fm {
    struct Fumo {
        let name: char*;
        let squished: i32;
        
        fn squish(times: i32) -> void {
            squished = squished + times;
            printf("%sちゃんは%d回squished!\n", name, squished);
        }
    }
    fn pet_fumo(fumo: Fumo*, times: i32) -> void;
}

fn fm::pet_fumo(fumo: Fumo*, times: i32) -> void {
    printf("petting %s %d times...\n", fumo->name, times);
    fumo->squish(times);
}

let reimu = fm::Fumo {"Reimu", 66};
let cirno = fm::Fumo {"Cirno", 418};

fn main() -> i32 {
    printf("fumo lang example.\n");
    
    fm::pet_fumo(&reimu, 3);
    fm::pet_fumo(&cirno, 2);
    
    printf("\nfinal pat count:\n");
    printf("Reimu: %d pats\n", reimu.squished);
    printf("Cirno: %d pats\n", cirno.squished);
    
    return 0;
}
